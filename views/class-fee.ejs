<%- include('partials/classes-gradient') %>
  <style>
  

    h2 {
      text-align: center;
      margin-bottom: 20px;
    }

    form {
      max-width: 500px;
      margin: 0 auto;
    }

    label {
      display: block;
      margin-bottom: 10px;
    }

    input[type="text"],
    select {
      width: 100%;
      padding: 8px;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
      margin-bottom: 10px;
    }

    input[type="file"] {
      margin-top: 5px;
    }

    input[type="submit"] {
      background-color: #4CAF50;
      color: white;
      padding: 10px 15px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    input[type="submit"]:hover {
      background-color: #45a049;
    }

    .form-group {
      margin-bottom: 20px;
    }
  
      .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
      }

      @media (min-width: 768px) {
        .bd-placeholder-img-lg {
          font-size: 3.5rem;
        }
      }

      .b-example-divider {
        width: 100%;
        height: 3rem;
        background-color: rgba(0, 0, 0, .1);
        border: solid rgba(0, 0, 0, .15);
        border-width: 1px 0;
        box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
      }

      .b-example-vr {
        flex-shrink: 0;
        width: 1.5rem;
        height: 100vh;
      }

      .bi {
        vertical-align: -.125em;
        fill: currentColor;
      }

      .nav-scroller {
        position: relative;
        z-index: 2;
        height: 2.75rem;
        overflow-y: hidden;
      }

      .nav-scroller .nav {
        display: flex;
        flex-wrap: nowrap;
        padding-bottom: 1rem;
        margin-top: -1px;
        overflow-x: auto;
        text-align: center;
        white-space: nowrap;
        -webkit-overflow-scrolling: touch;
      }

      .btn-bd-primary {
        --bd-violet-bg: #712cf9;
        --bd-violet-rgb: 112.520718, 44.062154, 249.437846;

        --bs-btn-font-weight: 600;
        --bs-btn-color: var(--bs-white);
        --bs-btn-bg: var(--bd-violet-bg);
        --bs-btn-border-color: var(--bd-violet-bg);
        --bs-btn-hover-color: var(--bs-white);
        --bs-btn-hover-bg: #6528e0;
        --bs-btn-hover-border-color: #6528e0;
        --bs-btn-focus-shadow-rgb: var(--bd-violet-rgb);
        --bs-btn-active-color: var(--bs-btn-hover-color);
        --bs-btn-active-bg: #5a23c8;
        --bs-btn-active-border-color: #5a23c8;
      }
      .bd-mode-toggle {
        z-index: 1500;
      }
    
  </style>   
  <main class="form-signin h-50 w-70 m-auto">
  <div class="card">
    <div class="card-body ">
      
    <h2>Fee Payment Form</h2>
    <form action="/class-fee" method="POST" enctype="multipart/form-data">
 
      <div class="form-group">
        <label for="reg">RegNo:</label>
        <input type="text" id="reg" name="reg" value="<%= regis %>" readonly>

      </div>
  
      <div class="form-group">
        <label for="name">Name:</label>
        <input type="text" class="form-control" id="name" name="name" required>
      </div>
      <div class="form-group">
        <label for="contact">Contact No:</label>
       <input type="tel" name="contact" id="contact" maxlength="10" pattern="\d{10}"placeholder="Enter Mobile No"> 
      </div>
  
      <div class="form-group">
        <label for="month">Month:</label>
        <select class="form-control" id="month" name="month" required>
          <option value="<%= monthName %>"><%= monthName %></option>
        </select>
      </div>
  
      <div class="form-group">
        <label for="batch">Batch:</label>
        <input type="text" class="form-control" id="batch" name="batch" value= "<%= ClassVal %>"required readonly>
          
      </div>
      <div class="form-group">
        <label for="subject">Subject:</label>
        <input type="text" class="form-control" id="subject" name="subject" value=" <%= subject %>" required readonly>
        
      </div>
      <div class="form-group">
        <label for="facultyName">Faculty:</label>
      
        <input type="text" class="form-control" id="facultyName" name="faculty" value="<%= facultyName %>" readonly readonly>
          
       
        </select>
      </div>

  
      <div class="form-group">
        <label for="paymentMethod">Payment Method:</label>
        <select class="form-control" id="paymentMethod" name="paymentMethod" required>
          <option value="UPI">UPI</option>
          <option value="Cash">Cash</option>
       
        </select>
      </div>
      <div class="form-group">
        <label for="amount">Amount:</label>
        <input type="number"id="amount"  required readonly>
          
        </select>
      </div>
  
      <div class="form-group ">
    
        <img src="css/qrcode.jpg" height="250px" align="center">
       
         
        
      </div>
      <div class="form-group">
        <label for="paymentPhoto">Payment Photo:</label>
        <input type="file" class="form-control-file selector"id="paymentPhoto" name="paymentPhoto" accept="image/*" required>
      </div>
  
      <a href="/appreciate"><button type="submit" class="btn btn-success" >Submit</button></a>
    </form>
  </div></div>
</main>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    // Fetch the batch value from the server-side (replace 'YOUR_BATCH_VALUE' with the actual batch value)
    var batch = "<%= ClassVal %>"; // Replace 'YOUR_BATCH_VALUE' with the actual batch value coming from the server-side

    // Get the amount input field
    var amountField = document.getElementById('amount');

    // Function to calculate the amount based on the batch value
    function calculateAmount(batch) {
      switch (batch) {
        case '8th':
          return '500';
        case '9th':
        case '10th':
          return '600';
        case '11th':
        case '12th':
          return '700';
        default:
          return ''; // Handle the case when batch value is unknown or not specified
      }
    }

    // Calculate and set the amount based on the batch value
    var calculatedAmount = calculateAmount(batch);
    amountField.value = calculatedAmount;
    amountField.readOnly = true; // Make the amount field readonly
  });
</script>

  
  <%- include('partials/footer') %>
